#Nota de Estudos
secao-15-curso-II-unidade-01-css3-fundamentl
secao-16-curso-II-unidade-02-css3-fundamentos-de-css

18/05/2023
######################################################################################
Seção 16: Curso II - Unidade 2 - Fundamentos CSS

color:#fff 
75. O que é CSS?

Cascading Style Sheets (ou CSS) é uma linguagem de estilo utilizada para definir a apresentação de 
documentos escritos em uma linguagem de marcação, como HTML ou XML.
Seu principal benefício é prover a separação entre o formato e o conteúdo de um documento.
Alusão do nome efeito cascata onde estilos sobrepõe estilos.

https://www.csszengarden.com/


Podemos criar estilos para dispositivos diferentes por exemplo.

Estilos é uma coleção de regras de formatação, neste conjunto de regras defini-se as aparêcias.


h4 {
    font-family: Georgia, "Times New Roman", Times, serif;
    font-size:120px;
    font-style:italic;
    color:#FC6;
}

Neste exemplo definimos que a tag h4 terá a aparencia com a fonte padrão o conjunto de fontes 'font-family: Georgia, "Times New Roman", Times, serif;'  com tamanh 120%  'font-size:120px;' com estilo italico e cor #FC6.

p,li {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 100%;
    line-height: 160%;
    color:#C63;
}

a{
    font-weight: bold;
    color:#C63;
    text-decoration:none;
}

a:hover{
    color:#CC3;
    text-decoration:underline;
}

color:#93c 
#Modelo externo.

É muito comum ver os estilos usando arquivos externos, tendo o arquivo html e o arquivo css o arquivo css você pode usar em diversos arquivos html. Com isso ganha-se produtividade cria um arquivos com as páginas da mesma aparência você aplica o mesmo estilo a elas.

<html>
    <head>
        <link href="estilos.css" rel="stylesheet">
    </head>
    <body>

    </body>
<html>

color:#fff 
#Modelo incorporado.

Existe o modelo incorporado  o css fica dentro do documento html esta aplicação fica útil apenas ao 
documento aplicado.

<html>
    <head>
        <style>
        h1 {
            font-size:200%;
            color:#54c
        }
        </style>
    </head>
    <body>
        <h1>Título</h1>
    </body>
<html>

color:#fff 
#Modelo inline

No modelo inline o estilo é aplicado diretamente na tag no qual este estilo fica aplicado apenas a esta tag.

<html>
    <head>

    </head>
    <body>
       <h1 style="color:red">Título da página</h1>
    </body>
<html>

Caso exista um outro h1 na mesma página html ela não terá a mesma aparência  pois foi aplicado apenas a ela.

color:#fff 
76. Sintaxe da linguagem CSS.

Uma regra CSS é composta por 'seletor' e sua declaração



SELETOR     DECLARAÇÃO
-------     -------------------------------------------------------
p           {                          VALORES
                                       ----------------------------
                        font-family:   Arial, Helvetica, sans-serif;
                        color:         #F00;
            }           ------------
                        PROPRIEDADES

Entre uma regra e outra existe  o ';' (ponto e vírgula)  para separar uma definição da 
outra.

Pode declarar mais definições na mesma linha:

    p  {font-family:Arial, Helvetica, sans-serif; color:#F00;}

Pode adicionar mais seletores na mesma regra CSS:

    p, li, a {font-family:Arial, Helvetica, sans-serif; color:#F00;}

Isso economiza tempo e digitação caso compartilhe das mesmas características.

Pode adicionar comentários no código CSS:

/* Comentário de única linha */

/*
   Comentário de
   múltiplas linhas
*/

https://www.w3.org/standards/webdesign/


color:#fff 
77. Tipos de seletores.

Redefinir a aparência de uma tag. Quando cria-se uma regra para uma tag css estou redefindo a sua aparência,
neste exemplo estamos redefinindo a aparência da tag 'p'.

Atribuindo uma nova 'font-family' e uma nova cor 'color' 

    p {
        font-family: Arial, Helvetica, sans-serif;
        color:#F00;
    }

Podemos redefinir a aparência de várias outras tags, neste modelo redefinindo a font, tamanho e cor.

    h1 {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 2.6em;
        color:#F00; 
    }

color:#fff 
- Criar classe

Ao criar uma classe css precedemos ela com '.' (ponto)

    .destaque {
        font-weight:bold;
        text-decoration:underline;
        color:#F00;
    }

    para sua aplicação:

    <p class="destaque">Hoje é quarta-feira.</p>

color:#fff
- Criar id

Para criar um id em css precede com cerquilha(#) 

    #janela {
        float:left;
        width:200px; height:100px;
        background-color:#CCC;
    }

    para sua aplicação:

    <div id="janela"></div>

color:#fff
- Diferença entre um 'id' e 'class'.

'id' é uma identificação que criamos a um elemento do HTML. Tem como característica principal, ser aplicado
a um único elemento em um documento web.

Em seu uso em mais de um elemento é renderizado pela engine do browser porem não é recomendado
pois dará inconsistência ao documento na análise de códificação por validadores.

'class'  também é o nome atribuído a elemento 'html' porém pode ser aplicado a mais de um elemento, no mesmo
documento web.

color:#fff 
- Seletor em grupo

Desejando atribuir a mesma característica a mais de um parâgrafo.

<html>
    <head>

    <style>

        p {
            font-family: Arial, Helvetica, sans-serif;
            font-size:90%
            color:#069;
        }

    </style>

    </head>

    <body>

       <p>Título da página</p>

       <ul>
           <li>Item 1</li>
           <li>Item 2</li>
           <li>Item 3</li>
       </ul>

       <a href="#">Link</a>

    </body>

<html>

color:#fff 
Método 1 - 3 regras distintas com os seletores individuais.

        
<html>
    <head>
        <style>
            p {
                font-family: Arial, Helvetica, sans-serif;
                font-size:90%
                color:#069;
            }
            li {
                font-family: Arial, Helvetica, sans-serif;
                font-size:90%
                color:#069;
            }
            a {
                font-family: Arial, Helvetica, sans-serif;
                font-size:90%
                color:#069;
            }
        </style>
    </head>
    <body>
       <p>Título da página</p>
       <ul>
           <li>Item 1</li>
           <li>Item 2</li>
           <li>Item 3</li>
       </ul>
       <a href="#">Link</a>
    </body>
<html>


color:#fff 
Método 2 - Regra distinta  unificando os 3 seletrores 'p','li','a'.      

<html>
    <head>
        <style>
            p, li, a {
                font-family: Arial, Helvetica, sans-serif;
                font-size:90%
                color:#069;
            }
        </style>
    </head>
    <body>
       <p=>Título da página</p>
       <ul>
           <li>Item 1</li>
           <li>Item 2</li>
           <li>Item 3</li>
       </ul>
       <a href="#">Link</a>
    </body>
<html>


color:#fff 
Método 3 - Método em Cascata
           Regra distinta  unificando os 3 seletrores 'p','li','a'.
           adicionando uma classe para modificar o seleter escolhido 
           entres para adicionar uma nova regra ao seletor aplicando
           através da classe a tag escolhida 'p'.
           Substituindo a regra 'color' anterior mas mantendo as outras
           características anteriores.

<html>
    <head>
        <style>

            p, li, a {
                font-family: Arial, Helvetica, sans-serif;
                font-size:90%
                color:#069;
            }

            .destaque {
                color:#93c;
            }

            /* adicionamos um estilização adicional agrupando 'li' com a classe '.destaque' */

            li.destaque {font-weight:bold;}

        </style>
    </head>
    <body>
       <p class="destaque">Título da página</p>
       <ul>
           <li>Item 1</li>
           <li class="destaque">Item 2</li>
           <li>Item 3</li>
       </ul>
       <a href="#">Link</a>
    </body>
<html>

color:#ffff 
- Seletor descendente
    Uma determinda alteração de caracteristica do 'p' mas apenas aos que estão dentro da 'div'.

<html>
    <head>
        <style>
            div p {
                font-family: Arial, Helvetica, sans-serif;
                color:#069;
            }
        </style>
    </head>
    <body>

    <div>
        <p>Exemplo de parágrafo dentro da DIV - CSS</p>
        <p>Segundo parágrafo dentro DIV - CSS</p>
    </div>

        <p class="destaque">Texto fora da DIV - CSS</p>
    </body>
<html>

color:#fff 
- Seletor adjacente
    Determinda a ordem no qual a alteração será aplicada.

    h2+p{color:#f00;}

    OA regra será aplicada ao primeiro 'p' que estiver depois do 'h2'


<html>
    <head>
        <style>
            h2 {font-family: Arial, Helvetica, sans-serif;}
            p {color:#069;}
            h2+pa { color:#f00;}
        </style>
    </head>
    <body>
        <h2>Título da página</h2>
        <p>Primeiro texto</p>
        <p>Segundo texto</p>
    </body>
<html>

color:#fff 
78. Como escrever um código de forma eficiente.
    Boas práticas.

    - Estruturar o HTML para adicionar apenas o conteúdo.
    - Não focar no estilo quando for estrutura o código.
    - Escrever um código limpo e eficiente.
    - Um código bem estruturado é muito mais fácil de estilizar.
    - Indente corretamente as regras de seu código.

###Exemplo código sujo###

<div id="central">
  <h1 class="textoGrande Preto Negrito">Cafe Townsend - Menu</h1>
  <div id="menu">
    <a href="#appertizers"> Appertizers</a> | <a href="#entress"> Entress</a> | <a href="#desserts"> Desserts</a>
  </div>
  <h3 class="textoMedio">Appetizers</h3>
  <img id="minhaFoto" src="images/appertizer.jpg" width="475" height="102" alt="appetizers" />
  <ul class="listaprincipal">
   <li>Roasted Tomato Soup - served with goat cheese croutons and basil puree.</li>
   <li>Summer Salad - organic butter lettuce with apples and garlic crostini. Good for sharing.</li>
   <li>Foundue of Brie, Goat Cheese, and Gruyere - served with green apples and garlic crostini. Good for sharing.</li>
   <li>Crispy Flatbread - topped with asiago, prosciutto, and rocket.</li>
   <li>Yellow-finAhi Tatar - served on a bed of shredded cabbage with avocado relish and a green peppercon dressing.</li>
  </ul>
</div>

##########################
###Exemplo código limpo###

<div id="central">

    <h1>Cafe Townsend - Menu</h1>

    <div id="menu">
        <a href="#appertizers">Appertizers</a> | <a href="#entress">Entress</a> | <a href="#desserts">Desserts</a>
    </div>

    <h3 class="textoMedio">Appetizers</h3>

    <img src="images/appertizer.jpg" width="475" height="102" alt="appetizers"/>

    <ul>
        <li>Roasted Tomato Soup - served with goat cheese croutons and basil puree.</li>
        <li>Summer Salad - organic butter lettuce with apples and garlic crostini. Good for sharing.</li>
        <li>Foundue of Brie, Goat Cheese, and Gruyere - served with green apples and garlic crostini. Good for sharing.</li>
        <li>Crispy Flatbread - topped with asiago, prosciutto, and rocket.</li>
        <li>Yellow-finAhi Tatar - served on a bed of shredded cabbage with avocado relish and a green peppercon dressing.</li>
    </ul>

</div>

##########################
color:#fff
- Nomeclatura dos 'ids' e 'classes'

  -No momento de declarar o nome de um 'id' digite '#' antes do nome.
  Exemplo: #principal ou #central

  -Ao declarar uma classe digite '.' antes do nome.
  Exemplo> .destaque ou .meuItem

  -Não utilize caracteres especiais como acentos ou 'ç' ou espaços.

- Aplicando mais de uma classe ao mesmo elemento.
  Por exemplo existe duas classes 'destaque' e 'vermelho' basta deixar um espaço um nome e outro. 

  <div class="destaque vermelho"></div>

- Aplicando 'id' e 'class' no mesmo elemento.

  <div id="janel" class="destaque"></div>

color:#fff
79. Como os navegadores leem CSS.

O css substitui, dentro do meu estilo css temos uma definição para 'p' , dentro do 'html' foi realizado alterações.

CSS         |    
estilo.css  |  p{ font-family:Arial, Helvetica, sans-serif;color:#0f0;}

HTML        |  p{ font-family:Arial, Helvetica, sans-serif;} 
index.html  |       
               <p style="color:#f00">Texto dentro de um paragrafo de um site.</p>


1º  regra prioritaria css 'inline'
    todas as regras no documento habilitadas a 'inline' é renderizada pelo browser.

2º  regra prioritaria css 'incorporado'
    sem estilização 'inline' linkado com css'externo' o estilo interno é prioritario é renderizada pelo browser.
        
3º  regra prioritária css 'vinculado'
    na ausencia de estilo 'inline' e ' interno' o css 'externo' é prioritario é renderizada pelo browser.

#secao-16-curso-II-unidade-02-css3-fundamentos-de-css
#23/05/2023     
#####################################################################################################
#secao-17-curso-II-unidade-03-css3-fundamentos-de-css
#24/05/2023 

color:#fff
80. Com aplicar CSS no HTML


Aplicação do css incorporado significa que está dentro do arquivo html, entre as tags <head><head>
aplica entre as tags <style></style> a estilização do documento.
  
Estilizando o 'h1' entre as tags <style></style>  adicionando as propriedade e seus valores. Inicialmente alterando utilizando a propriedade 'color' com o valor 'red'.

Em seguida alteramos o tipo de fonte através da propriedade 'font-family' lembrando que entre uma propriedade e outra separamos utilizando ';'.

Criamos uma nova propriedade para a tag 'p' para a customização do parágrafo. Quanto utilizamos uma propriedade padrão afetamos o estilo de todas as propriedades 'p' do documento.

<html>
    <head>
        <title>Curso de CSS3 - Essencial</title>
        <meta charset="utf-8">
        <style>

            h1 {
                color:red;
                font-family: sans-serif;
            }

            p {
                color:brow;
                font-family: sans-serif;
            }

        </style>
    </head>
    <body>
        <h1>Cafe Townsend welcomes you</h1>
        <p>Cafe Townsend's visionary chef leads the way in a culinary revolution. Proclaimed by many to be the best chef in the world today, Chef Bienni blends earthy seasonal flavors and bold ingredients to create exquisite contemporary cuisine. </p>
        <p>The name Cafe Townsend comes from our first restaurant, located in a historic building on Townsend Street in San Francisco, where we opened the doors in 1985. We've replicated the elegant interior, exceptional service, and world-class cuisine in our restaurants around the country.</p>          
    </body>
</html>

color:#fff
81. CSS inline

Inline significa em linha, a linga da tag os as propriedades serão apicadas receberão o estilo. Neste caso estilizamos de forma específica a tag incluindo em sua linha as propriedades. Esta estilização inicia-se através da propriedade 'style' dentro da própria tag '<p style="color:green">' nota-se que apenas a tag com a estilização inline foi afetada esta customização foi específica a tag com o 'style'.

É possível fazer uma combinação de estilo combinando com o css inline e o incorporado, neste caso definindo no css incorporado o tipo de fonte no qual será abrangente a todos s 'p's do documento.

A fonte foi alterada para tods os paragrafos do documento mas apenas a estilização de cor está no parágrafo com a estilização inline. Para aplicações locais podemos usar a tag '<span></span>" adicionando a propriedade customizando parte do texto permeado pela tag. Diferente da aplicação da propriedade de forma 'inline' onde a propriedade é escrita utilizando '=' e aspas duplas ' "" ' 'style="valor"' no estilo incorporado escrevemos a propriedade seguida de ':' e sem aspas duplas o valor 'style:valor;'.

<span style="background:yellow">Cafe Townsend</span>

No estilo 'inline' podemos combinar com outros atributos separando entre aspas, aplicando 'font-weight' optando por 'bold' deixando em negrito todo o parágrafo. Adicionando utras propriedades sempre separando-as por ';'.

<p style="color:green;font-weight:bold">

<html>
    <head>
        <title>css-inline</title>
        <meta charset="utf-8">
        <style>
            p {
                font-family:sans-serif;
            } 
        </style>
    </head>
    <body>
        <h1>Cafe Townsend welcomes you</h1>
        <p style="color:green;font-weight:bold">Cafe Townsend's visionary chef leads the way in a culinary revolution. Proclaimed by many to be the best chef in the world today, Chef Bienni blends earthy seasonal flavors and bold ingredients to create exquisite contemporary cuisine. </p>
        <p>The name <span style="background:yellow">Cafe Townsend</span> comes from our first restaurant, located in a historic building on Townsend Street in San Francisco, where we opened the doors in 1985. We've replicated the elegant interior, exceptional service, and world-class cuisine in our restaurants around the country.</p>          
    </body>
</html>

25/05/2023

color:#fff
82. CSS importado

O mesmo arquivo css pode aplicar em várias páginas beneficiando em produtividade e padronização.
Criamos a folha de estilo css na pasta 'src' nomeando como 'estilo.css'.

No arquivo 'estilo.css' adicionamos os seguintes valores e propriedades.

'estilo.css'

h1 {
    font-family: sans-serif;
    font-size:36px;
    color:brown;
}

p {
    font-family: sans-serif;
    font-size:12px;
    color:gray; 
}

'index.html'

<html>
    <head>
        <title>css-inline</title>
        <meta charset="utf-8">
        <link href="src/estilo.css rel-"stylesheet">
    </head>
    <body>
        <h1>Cafe Townsend welcomes you</h1>
        <p style="color:green;font-weight:bold">Cafe Townsend's visionary chef leads the way in a culinary revolution. Proclaimed by many to be the best chef in the world today, Chef Bienni blends earthy seasonal flavors and bold ingredients to create exquisite contemporary cuisine. </p>
        <p>The name <span style="background:yellow">Cafe Townsend</span> comes from our first restaurant, located in a historic building on Townsend Street in San Francisco, where we opened the doors in 1985. We've replicated the elegant interior, exceptional service, and world-class cuisine in our restaurants around the country.</p>          
    </body>
</html>

Vinculamos o arquivo css externo atravé do link:

<link href="src/estilo.css rel-"stylesheet">

O "href" vem de referência, ele indica onde está o arquivo que você quer importar, que pode ser um arquivo dentro de uma pasta no seu computador, por exemplo: "href"="/estilos/styles.css", ou também uma URL da internet.

O atributo rel vem de relationship serve para você dizer qual o relacionamento do arquivo que você quer utilizar com o arquivo atual. Quando você coloca rel="stylesheet", você está dizendo que o arquivo importado é o arquivo responsável pelo estilo da sua página.


color:#fff
83. Proriedade de Cascata
28/05/2023

Cascading Staly Sheet significa folha de estilo em cascata em alusão (Queda de água, natual ou artificial castatear cair em forma de cascata) uma série de folhas de estilos podem mudar a atribuição anterior, por exemplo temos o estilo no estilo externo atribuições.

O efeito castata permite mudar atribuições anteriores.
        Seguindo as seguintes prioridades:

        1º regra prioriza css 'inline'
           todas as regras no documento habilitadas a 'inline' é renderizada pelo browser.

        2º regra prioriza css 'incorporado'
           sem estilização 'inline' linkado com css'externo' o estilo interno é prioritario é renderizada pelo browser.
        
        3º regra prioriza css 'vinculado'
           na ausencia de estilo formtando vindo do 'inline' e ' interno' o css 'externo' é prioritario é renderizada pelo browser.

           Neste exemplo temos o <h1> definico sua cor em 'color:#FC6;' no arquivo css externo para o efeito cascata a 
           a atribuição incorporada define a cor 'color: darkblue;' lembrando que o arquivo externo mantem a propriedades para todas as páginas estillizada por ela já o estilo incorporado irá mudar esta atribuição apenas a esta página.

           Considera-se prioritário a formatação mais próxima da tag.

color:#fff
84 System Fonts x Web Fonts

Trabalhando com fontes - Tipografia
Se a fonte padrão da página não for alterada ela será efinida com a fonte padrão do computador que estiver acessando
a página por padrão é 'Times New Roman'.

Opções de fontes:

    - Fontes do sistema
      -- Largamente suportada
      -- Escolhas limitadas

    - Fontes da Web
      -- Método atual
      -- Baixo suporte a navegadores antigos.

color:#fff
- Fontes do Sistema.

Serif              Sans Serif     Monospace       Cursive
- Times            - Arial        - Courier       - Comic Sans
- Times New Roman  - Helvetica    - Courier New
- George           - Verdana      - Monaco
                   - Geneva

A font precisa estar nstalado no dispositco client.

Normalmente na atribui-se nas regras uma família de fontes causa ocorra ausência dela fica definido sua substiuição.
Caso a font Arial não se encontra instalada no dispositivo o navegador irá procurar a fonte seguinte determinada na família, caso não encontre sua última atribuição irá procurara a família de fonts sans-serif. 

p {
    font-family: Arial, Helvetica, sans-serif;
}

color:#fff
- Fonts Web

Web Font possue a técnica de embutir fontes em aqruivos web usando mpetodo @font-face. Isto permite que desenvolvedores possam usar recursos sem a preocupação se o usuário tenha ou não aquela fonte.

@font-face {

    font-family: 'Philosopher Regular';
        src:url('../fonts/philosopher-webfont.eot?') format('eot'),
            url('../fonts/philosopher-webfont.woff') format('woff'),
            url('../fonts/philosopher-webfont.ttf')  format('truetype'),
            url('../fonts/philosopher-webfont.svg#webfontKWmDqtHI')  format('svg');
    
    font-weight: normal;
    font-style: normal;
        
}

Existem inúmeras maneiras mais fáceis e simples de você utilizar web fonts em seu website.

- Google Fonts
- fonts.com
- Adobe Edge Web Fonts

3 pontos importantes que devem influenciar a sua escolha das melhores fontes para sites:

-Confiança
-Legibilidade
-Alinhamento com a marca

principais tipos de fontes:

- Serif — essas fontes incluem pequenas linhas ou traços (conhecidos como serifas) anexados a letras, símbolos e números maiores
- Sans serif — essas fontes têm um design mais minimalista porque não possuem linhas/traços adicionados em símbolos, números e letras
- Script — fontes que têm uma ênfase particular em se assemelhar a caligrafia
- Display — fontes artísticas e atraentes, geralmente usadas para fins decorativos

Uma fonte da Web é qualquer fonte usada no design de um site que não é instalada por padrão no dispositivo do usuário final - uma contraparte de uma fonte do sistema .

A adoção generalizada de fontes da web aconteceu por volta de 2009–2011 graças ao aumento do suporte dos navegadores convencionais para duas coisas: @font-facedeclarações em CSS e o formato de arquivo WOFF.

WOFF (e seu sucessor WOFF2) são formatos de arquivo compactados criados especificamente para fontes da web. Embora as fontes OpenType regulares (arquivos TTF e OTF) possam ser usadas como fontes da Web, esse uso não é recomendado, pois geralmente infringe os contratos de licença - e os arquivos são significativamente maiores. As fontes WOFF e WOFF2 geralmente não podem ser instaladas em computadores desktop.

Observe que as fontes da web são recursos que precisam ser baixados e, portanto, afetam o desempenho geral dos tempos de carregamento da página; ou seja, quanto mais fontes da web usarmos, mais tempo levará para carregar nossos sites. Isso é potencialmente compensado com o uso de fontes variáveis .

https://www.w3schools.com/css/css_font_fallbacks.asp

o tipo de arquivo correto:

TTF
OTF
WOFF/WOFF2
SVG
EOT

Com estes tipos de arquivo de fonte, você poderá então utilizá-lo em todo o seu site e estilizá-lo com HTML e CSS.

lista de fontes seguras na web que geralmente podem ser utilizadas.

Arial
Brush Script MT
Comic Sans
Courier New
Garamond
Georgia
Helvetica
Impact
Lucida Console
Palatino
Tahoma
Times New Roman
Trebuchet MS
Verdana

Best Web Safe Fonts for HTML and CSS
The following list are the best web safe fonts for HTML and CSS:

Arial (sans-serif)
Verdana (sans-serif)
Tahoma (sans-serif)
Trebuchet MS (sans-serif)
Times New Roman (serif)
Georgia (serif)
Garamond (serif)
Courier New (monospace)
Brush Script MT (cursive)



/* Webfont: nome-font */
@font-face {
    font-family: 'nome-font';
    src:    url('nome-font.eot'); /* IE9 Compat Modes */
    src:    url('nome-font.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
            url('nome-font.woff') format('woff'), /* Modern Browsers */
            url('nome-font.woff2') format('woff2'), /* Modern Browsers */
            url('nome-font.ttf') format('truetype'); /* Safari, Android, iOS */
    font-style: normal;
    font-weight: normal;
    text-rendering: optimizeLegibility;
}


color:#fff TrueType Font (TTF)
O formato de arquivo TrueType Font (TTF) foi criado em parceria pela Apple Computer e pela Microsoft Corporation. É o formato mais comum de fontes utilizado nos sistemas operacionais Macintosh e Windows. O formato de arquivo TTF imprime caracteres como bitmaps ou vetores, dependendo dos recursos da impressora. As fontes TrueType são impressas e exibidas da mesma forma na tela, e podem ser redimensionadas em qualquer altura.

color:#fff OpenType® 
é um formato de arquivo de fonte multiplataforma desenvolvido em conjunto pela Adobe e pela Microsoft. A Adobe converteu toda a Adobe Type Library neste formato e agora oferece milhares de fontes OpenType.

Os dois principais benefícios do formato OpenType são sua compatibilidade entre plataformas (o mesmo arquivo de fonte funciona em computadores Macintosh e Windows) e sua capacidade de suportar conjuntos de caracteres amplamente expandidos e recursos de layout, que fornecem suporte linguístico mais rico e controle tipográfico avançado. 

O formato OpenType é uma extensão do formato TrueType SFNT que também pode suportar dados de fonte Adobe® PostScript® e novos recursos tipográficos. As fontes OpenType que contêm dados PostScript, como as da Adobe Type Library, têm um sufixo .otf no nome do arquivo de fonte, enquanto as fontes OpenType baseadas em TrueType têm um sufixo .ttf no nome do arquivo.
As fontes OpenType incluem um conjunto de caracteres expandido e recursos de layout tipográfico, fornecendo suporte linguístico mais amplo e controle tipográfico mais preciso.

Melhor suporte a idiomas
Com base no Unicode, o padrão de codificação internacional que abrange praticamente todos os idiomas do mundo, as fontes OpenType facilitam a tipografia multilíngue.

color:#fff Tipografia avançada

As fontes OpenType podem conter mais de 65.000 glifos, o que permite que um único arquivo de fonte contenha muitos glifos alternativos, como figuras de estilo antigo, maiúsculas pequenas, frações, swashes, superiores, inferiores, letras de título, alternativas contextuais e estilísticas e um gama de ligaduras.

Historicamente, alguns dos tipos de letra da mais alta qualidade incluíram designs diferentes para tamanhos de impressão diferentes. Várias fontes OpenType da Adobe incluem variações de tamanho óptico, como: legenda, regular, subtítulo e exibição. Chamadas de “ópticas”, essas variações foram otimizadas para uso em tamanhos de pontos específicos. Embora os tamanhos exatos pretendidos variem de acordo com a família, os intervalos gerais de tamanho incluem: legenda (6-8 pontos), regular (9-13 pontos), subtítulo (14-24 pontos) e exibição (25-72 pontos).

color:#fff Suporte ao recurso OpenType

No centro de uma discussão sobre o suporte ao recurso OpenType está a distinção entre caracteres e glifos. Os caracteres são os pontos de código atribuídos pelo padrão Unicode, que representam as menores unidades semânticas da linguagem, como as letras. Glifos são as formas específicas que esses personagens podem assumir. Um caractere pode corresponder a vários glifos; o “a” minúsculo, um maiúsculo “a” e um swash alternativo “a” minúsculo são todos o mesmo caractere, mas são três glifos separados. Um glifo também pode representar vários caracteres, como no caso da ligadura “ffi”, que corresponde a uma sequência de três caracteres: f, f e i.

Os recursos de layout OpenType podem ser usados ​​para posicionar ou substituir glifos. Para qualquer caractere, há um glifo padrão e um comportamento de posicionamento. A aplicação de recursos de layout a um ou mais caracteres pode alterar o posicionamento ou substituir um glifo diferente. Por exemplo, a aplicação do recurso de letras maiúsculas minúsculas ao “a” substituiria o glifo “a” de letras minúsculas pelo glifo “a” minúsculo comum. Para acessar glifos alternativos em uma fonte OpenType, um aplicativo fornece uma interface de usuário que permite aos usuários finais aplicar recursos de layout OpenType ao texto.


color:#fff O formato de fonte aberta da Web (WOFF)
WOFF (o Web Open Font Format) é um formato de fonte da web desenvolvido pela Mozilla em conjunto com Type Supply, LettError e outras organizações. Ele usa uma versão compactada da mesma estrutura sfnt baseada em tabela usada por TrueType, OpenType e Open Font Format, mas adiciona metadados e estruturas de dados de uso privado, incluindo campos predefinidos que permitem que fundições e fornecedores forneçam informações de licença, se desejado.

Existem três benefícios principais em usar o WOFF:

Os dados da fonte são compactados, portanto, os sites que usam WOFF usarão menos largura de banda e serão carregados mais rapidamente do que se usassem arquivos TrueType ou OpenType descompactados equivalentes.
Muitos fornecedores de fontes que não desejam licenciar suas fontes de formato TrueType ou OpenType para uso na Web licenciarão fontes de formato WOFF. Isso melhora a disponibilidade de fontes para os designers do site.
Ambos os fornecedores de navegadores de software livre e proprietário gostam do formato WOFF, então ele tem o potencial de se tornar um formato de fonte verdadeiramente universal e interoperável para a web, ao contrário de outros formatos de fonte atuais.
Existem duas versões do WOFF: WOFF e WOFF2. Eles diferem principalmente em relação ao algoritmo de compressão usado. Em @font-face, eles são identificados pelo descritor de formato 'woff' e 'woff2', respectivamente.

Usando WOFF
Você pode usar a propriedade CSS @font-face para usar fontes WOFF para texto em conteúdo da web. Ele funciona exatamente como as fontes de formato OpenType e TrueType, exceto que provavelmente permitirá que seu conteúdo seja baixado com mais eficiência devido à adição de compactação.

Ferramentas para trabalhar com fontes WOFF
Estão disponíveis ferramentas para trabalhar com fontes WOFF. sfnt2woff e woff2sfnt convertem entre WOFF e OpenType.

https://developer.mozilla.org/en-US/docs/Web/Guide/WOFF


color:#fff Fontes SVG

Quando o SVG foi especificado, o suporte para fontes da web não foi difundido nos navegadores. Como acessar o arquivo de fonte correto é, no entanto, crucial para renderizar o texto corretamente, uma tecnologia de descrição de fonte foi adicionada ao SVG para fornecer essa capacidade. Não se destinava à compatibilidade com outros formatos como PostScript ou OTF, mas sim como um meio simples de incorporar informações de glifo em SVG quando renderizado.

A base para definir uma fonte SVG é o elemento <font>.

Definindo uma fonte
Existem alguns ingredientes necessários para incorporar uma fonte em SVG. Vamos mostrar um exemplo de declaração (o da especificação), e explicar os detalhes. A base para definir uma fonte SVG é o elemento <font>.

<font id="Font1" horiz-adv-x="1000">
  <font-face
    font-family="Super Sans"
    font-weight="bold"
    font-style="normal"
    units-per-em="1000"
    cap-height="600"
    x-height="400"
    ascent="700"
    descent="300"
    alphabetic="0"
    mathematical="350"
    ideographic="400"
    hanging="500">
    <font-face-src>
      <font-face-name name="Super Sans Bold" />
    </font-face-src>
  </font-face>
  <missing-glyph><path d="M0,0h200v200h-200z" /></missing-glyph>
  <!-- Outline of exclamation point glyph -->
  <glyph unicode="!" horiz-adv-x="300"></glyph>
  <glyph unicode="@"><!-- Outline of @ glyph --></glyph>
  <!-- more glyphs -->
</font>


Começamos com o elemento <font>. Isso contém um atributo id, para permitir que seja referenciado por meio de um URI (veja abaixo). O atributo horiz-adv-x determina a largura média de um caractere em comparação com as definições de caminho dos glifos únicos. O valor 1000 define um valor razoável para trabalhar. Há vários atributos acompanhantes que ajudam a definir melhor o layout básico da caixa de glifos.

O elemento <font-face> é o equivalente SVG da declaração CSS @font-face. Ele define as propriedades básicas da fonte final, como peso, estilo etc. No exemplo acima, a primeira e mais importante a ser definida é a família de fontes, cujo valor pode ser referenciado nas propriedades da família de fontes CSS e SVG . Os atributos font-weight e font-style têm o mesmo propósito que os descritores equivalentes em CSS. Todos os atributos a seguir são instruções de renderização para o mecanismo de layout de fonte; por exemplo, quanto das alturas gerais dos glifos são ascendentes.

Seu filho, o elemento <font-face-src>, corresponde ao descritor src do CSS nas declarações @font-face. Você pode apontar para fontes externas para declarações de fonte por meio de seus filhos <font-face-name> e <font-face-uri>. O exemplo acima afirma que, se o renderizador tiver uma fonte local disponível chamada "Super Sans Bold", ele deve usá-la.

Seguindo <font-face-src> está um elemento <missing-glyph>. Isso define o que deve ser exibido se um determinado glifo não for encontrado na fonte e se não houver mecanismos de fallback. Ele também mostra como os glifos são criados: Adicionando qualquer conteúdo gráfico SVG dentro. Você pode usar literalmente qualquer outro elemento SVG aqui, mesmo <filter>, <a> ou <script>. Para glifos simples, no entanto, você pode adicionar um atributo d — isso define uma forma para o glifo exatamente como funcionam os caminhos SVG padrão.

Os glifos reais são então definidos pelos elementos <glyph>. O atributo mais importante é o unicode. Ele define o ponto de código unicode representado por este glifo. Se você também especificar o atributo lang em um glifo, poderá restringi-lo ainda mais a determinados idiomas (representados por xml:lang no destino) exclusivamente. Novamente, você pode usar SVG arbitrário para definir o glifo, o que permite ótimos efeitos no suporte a agentes de usuário.

Mais dois elementos podem ser definidos dentro da fonte: <hkern> e <vkern>. Cada um carrega referências a pelo menos dois caracteres (atributos u1 e u2) e um atributo k que determina quanto a distância entre esses caracteres deve ser diminuída. O exemplo abaixo instrui os agentes do usuário a colocar os caracteres "A" e "V" mais próximos do que a distância padrão entre os caracteres.


<hkern u1="A" u2="V" k="20" />

Fazendo referência a uma fonte
Depois de montar sua declaração de fonte conforme descrito acima, você pode usar apenas um atributo de família de fonte simples para realmente aplicar a fonte a algum texto SVG:

<font>
  <font-face font-family="Super Sans" />
  <!-- and so on -->
</font>

<text font-family="Super Sans">My text uses Super Sans</text>

No entanto, você pode combinar vários métodos para obter grande liberdade de como e onde definir a fonte.

Opção: Use CSS @font-face

Você pode usar @font-face para referenciar fontes remotas (e não tão remotas):


<font id="Super_Sans">
  <!-- and so on -->
</font>

<style>
  @font-face {
    font-family: "Super Sans";
    src: url(#Super_Sans);
  }
</style>

<text font-family="Super Sans">My text uses Super Sans</text>

Opção: referenciar uma fonte remota
O elemento font-face-uri mencionado acima permite que você faça referência a uma fonte externa; portanto, permitindo maior reutilização:

<font>
  <font-face font-family="Super Sans">
    <font-face-src>
      <font-face-uri xlink:href="fonts.svg#Super_Sans" />
    </font-face-src>
  </font-face>
</font>


color=#fff  - Embedded OpenType

As fontes OpenType ( EOT ) incorporadas são uma forma compacta de fontes OpenType projetadas pela Microsoft para uso como fontes incorporadas em páginas da Web . Esses arquivos usam a extensão . Eles são suportados apenas pelo Microsoft Internet Explorer , ao contrário dos arquivos WOFF concorrentes . .eot

A maioria das fontes comerciais tem um contrato de licença de usuário final (EULA) que especifica os direitos que uma pessoa que comprou uma licença para usar a fonte pode desfrutar. Como o direito de distribuir livremente a fonte para outros não é normalmente concedido, sendo restrito à instalação dentro de um conjunto limitado de parâmetros, existe a necessidade de um mecanismo que permita às pessoas que licenciaram a fonte para uso com seus documentos uma maneira de também usar a fonte para o conteúdo da web sem violar o contrato de EULA que eles aceitaram. O formato de arquivo EOT foi desenvolvido pela Microsoft em cooperação com criadores de fontes exatamente por esse motivo. A tecnologia foi aceita para uso por fabricantes de fontes por mais de 10 anos.

Esta submissão estabelece as responsabilidades e expectativas para as seguintes classes de implementadores/usuários do formato de arquivo EOT:

Ferramentas de autoria
Servidores de conteúdo web
Agentes de usuário

https://www.w3.org/Submission/EOT/

https://learn.microsoft.com/pt-br/typography/tools/vtt/
https://learn.microsoft.com/pt-br/typography/tools/volt/